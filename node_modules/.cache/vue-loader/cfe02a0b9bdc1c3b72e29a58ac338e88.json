{"remainingRequest":"/Users/montierkess/Desktop/vue-project/discovery-tool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/montierkess/Desktop/vue-project/discovery-tool/src/components/DiscoveryForm.vue?vue&type=template&id=0fde4894&","dependencies":[{"path":"/Users/montierkess/Desktop/vue-project/discovery-tool/src/components/DiscoveryForm.vue","mtime":1600648209545},{"path":"/Users/montierkess/Desktop/vue-project/discovery-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/montierkess/Desktop/vue-project/discovery-tool/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/montierkess/Desktop/vue-project/discovery-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/montierkess/Desktop/vue-project/discovery-tool/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}